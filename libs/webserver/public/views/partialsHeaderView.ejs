<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
	<meta http-equiv="Pragma" content="no-cache" />
	<meta http-equiv="Expires" content="0" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />

	<title><%- appData.name %> <%- appData.version %></title>

	<link rel="stylesheet" href="/css/vendor/jquery-ui/jquery-ui.min.css" />
	<link rel="stylesheet" href="/css/vendor/jquery-confirm/jquery-confirm-3.3.2.min.css" />
	<link rel="stylesheet" href="/css/vendor/select2/select2.min.css" />
	<link rel="stylesheet" href="/css/vendor/simple-switch/simple-switch.css" />
	<link rel="stylesheet" href="/css/vendor/tablesorter/filter.formatter.min.css" />
	<link rel="stylesheet" href="/css/style.css" />

	<link href="https://fonts.googleapis.com/css?family=Heebo:400,600,300" rel="stylesheet" type="text/css">

	<script src="/js/vendor/socket.io/socket.io.min.js"></script>
	<script src="/js/vendor/jquery/jquery-3.6.3.min.js"></script>
	<script src="/js/vendor/jquery-ui/jquery-ui.min.js"></script>
	<script src="/js/vendor/jquery-confirm/jquery-confirm-3.3.2.min.js"></script>
	<script src="/js/vendor/select2/select2.full.min.js"></script>
	<script src="/js/vendor/simple-switch/jquery.simpleswitch.min.js"></script>

	<script src="/js/vendor/tablesorter/jquery.tablesorter.combined.min.js"></script>
	<script src="/js/vendor/tablesorter/parsers/parser-duration.min.js"></script>
	<script src="/js/vendor/tablesorter/parsers/parser-named-numbers.min.js"></script>
	<script src="/js/vendor/tablesorter/widgets/widget-columnSelector.min.js"></script>
	<script src="/js/vendor/tablesorter/widgets/widget-filter-formatter-jui.min.js"></script>

	<script type="text/javascript" src="https://s3.tradingview.com/tv.js"></script>

	<script>

	let dataTracker = {};
	let modalTracker = {};
	let pairBTC = 'BTC/USD';
	let exchangeBTC = 'bitstamp';

	$(document).ready(function() {

		dataTracker = getDataTracker();

		$('#logo').on('click', function() {

			window.location.href = '/';
		});

		$('#btcPrice').on('click', function() {

			showTradingView('homeView', 'modal', false, false, pairBTC, exchangeBTC);
		});

		getPriceBTC();
	});


	function dateConvertLocal(date) {

		date = new Date(date);

		let datePart = date.getFullYear() + '-' + ('00' + (date.getMonth() + 1)).slice(-2) + '-' + ('00' + date.getDate()).slice(-2);
		let timePart = ('00' + date.getHours()).slice(-2) + ':' + ('00' + date.getMinutes()).slice(-2) + ':' + ('00' + date.getSeconds()).slice(-2);

		let hourTemp = parseInt(timePart.split(':')[0]) % 12;

		if (hourTemp < 10) {

			hourTemp = '0' + hourTemp;
		}

		let timePartAmPm = (hourTemp == 0 ? '12' : hourTemp) + ':' + timePart.split(':')[1] + ' ' + (parseInt(parseInt(timePart.split(':')[0]) / 12) < 1 ? 'AM' : 'PM');

		let dateFull = datePart + ' ' + timePartAmPm;

		return dateFull;
	}


	function timeDiff(dateStart, dateEnd) {
 
		let diff = Math.abs(dateEnd - dateStart) / 1000;

		let diffString = '';

		let days = Math.floor(diff / 86400);
		diff -= days * 86400;

		let hours = Math.floor(diff / 3600) % 24;
		diff -= hours * 3600;

		let minutes = Math.floor(diff / 60) % 60;
		diff -= minutes * 60;

		let seconds = Math.floor(diff / 1) % 60;
		diff -= seconds * 60;

		if (days > 0) {
			
			diffString += days === 1 ? `${days}d` : `${days}d`;
		}

		if (hours > 0) {

			diffString += hours === 1 ? ` ${hours}h` : ` ${hours}h`;
		}

		if (minutes > 0) {

			diffString += minutes === 1 ? ` ${minutes}m` : ` ${minutes}m`;
		}

		if (seconds > 0) {

			diffString += seconds === 1 ? ` ${seconds}s` : ` ${seconds}s`;
		}

		diffString = diffString.trim();

		return diffString;
	}


	function sortByKey(array, key) {

		return array.sort(function(a, b) {
			let x = a[key];
			var y = b[key];
			return x < y ? -1 : x > y ? 1 : 0;
		});
	}


	function resizeBotsDeals(px) {

		let offSetBottom = -200;

		let p = $('.botsDealsBox').first();
		let positionTop = p.position().top;

		let contentHeaderHeight = $('.contentHeaderBox').height();

		contentHeaderHeight = contentHeaderHeight || 0;

		let pixels = offSetBottom - contentHeaderHeight;

		if (px != undefined && px != null) {

			pixels = px;
		}

		$('.botsDealsBox').height(($(window).height() + pixels));
	}


	function stripHtml(str) {

		str = str.toString();

		str = str.replace(/(<([^>]+)>)/gi, '');

		return str;
	}


	function alertBox(msg, func) {

		$.alert({
					title: false,
					boxWidth: '50%',
					useBootstrap: false,
					content: '<div style="font-size: 1.2rem; text-align: left;">' + msg + '</div>',
					buttons: {
								ok: {
										btnClass: 'btn-default',
										text: 'Ok',
										action: function() {

											if (func != undefined && func != null) {

												func();
											}
										}
									}
							 }
		});
	}


	function openModal(modalId, divModal, title, content, divAppend) {

		modalTracker[modalId] = $(divModal).dialog({

			dialogClass: 'fixed-dialog',
			create: function (event, ui) {

				$('.ui-dialog').css('border-radius', '5px');
			},
			show: {
					effect: 'scale',
					duration: 250
			},
			hide: {
					effect: 'scale',
					duration: 250
			},
			title: title,
			autoOpen: false,
			draggable: false,
			width: '90%',
			height: ($(window).height() - 200),
			modal: true,
			appendTo: divAppend,
			open: function (event, ui) {

				if (content != undefined && content != null && content != '') {

					$(divModal).html(content);
				}
			},
			close: function (event, ui) {
			}
		});

		$(divModal).dialog('open');
	}


	function getDataTracker() {

		let data = {};

		try {

			data = JSON.parse(localStorage.getItem('dataTracker'));
		}
		catch(e) {

		}
		
		return data;
	}


	function updateDataTracker() {

		localStorage.setItem('dataTracker', JSON.stringify(dataTracker));
	}


	async function getMarkets(pair, exchange) {

		let res;

		try {

			res = await $.ajax({
		
						type: 'GET',
						url: '/api/markets',
						data: { 'exchange': exchange, 'pair': pair },
						dataType: 'json',
						success: function(data) {

						},
						error: function(data) {

							// Some error in ajax call
						}
			});
		}
		catch(e) {
		}
		
		return res;
	}


	async function getPriceBTC() {

		let sec = 30;

		let price;
		let diffSec;

		if (dataTracker) {

			let dateLast = dataTracker['btc']['date'];
			price = dataTracker['btc']['price'];

			diffSec = (new Date().getTime() - new Date(dateLast).getTime()) / 1000;
		}

		// Get price only if last check exceeds n seconds
		if (!dataTracker || diffSec > (sec - 10)) {

			let data = await getMarkets(pairBTC, exchangeBTC);

			if (data) {

				let date = data.date;
				let success = data.success;

				if (success) {

					price = data.data.last;

					if (price == undefined || price == null) {

						price = data.data.price;
					}

					if (dataTracker == undefined || dataTracker == null) {
					
						dataTracker = {};
					}

					if (dataTracker['btc'] == undefined || dataTracker['btc'] == null) {

						dataTracker['btc'] = {};
					}

					dataTracker['btc']['date'] = new Date();
					dataTracker['btc']['price'] = price;

					updateDataTracker();
				}
			}
			else {

				price = 0;
			}
		}

		$('#btcPrice').html('BTC: $' + price);

		setTimeout(() => { getPriceBTC(); }, (sec * 1000));
	}


	function showTradingView(modalId, divId, jquery, script, pair, exchange) {

		if (exchange == undefined || exchange == null || exchange == '') {

			return;
		}

		exchange = exchange.toUpperCase();

		if (exchange.startsWith('COINBASE')) {

			exchange = 'COINBASE';
		}

		let url = '/api/tradingview?jquery=' + jquery + '&script=' + script + '&exchange=' + exchange + '&pair=' + pair.replace(/[^a-z0-9]/gi, '_');

		openModal(modalId, '#' + divId, 'TradingView Chart ' + pair, 'Loading...');

		$('#' + divId).load(url);
	}

	</script>

	<%- include('./partialsSocketView'); %>

</head>

<body>

<div id="headerBox"> 

	<div id="btcPrice"></div>

	<div style="position: absolute; left: 0; right: 0; top: 50%; transform: translateY(-50%);">
		<img id="logo" src="/images/SymBot-Logo.png" style="width: auto; height: 55px; vertical-align: middle;" />
	</div>

	<div id="notifications" class="notificationButton">&#128276;</div>
</div>

<div id="spinner-overlay">
	<div class="spinner-container"><span class="spinner"></span></div>
</div>

<center>
	<div id="modal"></div>
	<div id="modalDealEdit"></div>
	<div id="modalNotifications"></div>
</center>

<div id="notificationsBox"></div>
