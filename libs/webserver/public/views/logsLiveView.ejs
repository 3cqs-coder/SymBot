<%- include('./partialsHeaderView'); %>

    <script>

        $(document).ready(function() {

            $(window).resize(function() {
              
                resizeBotsDeals(offsetBottom);
            });

            const socket = io('/', {

                query: { 'room': 'logs' },
                extraHeaders: {

                  'user-agent': '<%- appData.name %>/<%- appData.version %>'
                },
                transports: ['websocket', 'polling'],
                path: '/ws',
                reconnection: true,
                reconnectionDelay: 10000
            });


            socket.on('connect', (data) => {

                // Initialize toggle switch after socket connection
                $('#simple-switch').simpleSwitch();
                $('#simple-switch').prop('disabled', false);

                // Delay binding (ensures all plugins have init)
                setTimeout(function() {

                  $('#simple-switch').on('change.toggleSwitch', function() {
                    
                    if ($(this).prop('checked')) {

                        $('#dataBox').css('overflow-y', 'auto');

                        $('#status-text').text('Live');

                        flushBuffer(); // Flush log data collected during pause

                    } else {
                      
                        $('#dataBox').css('overflow-y', 'auto');

                        $('#status-text').text('Paused');
                    }

                  });
                  
                }, 500);
            });


            socket.on('connect_error', (data) => {

                if (typeof data != 'string') {
                  
                    data = JSON.stringify(data);
                }

                alertBox('Connect Error: ' + data);
            });


            socket.on('connect_failed', (data) => {

                if (typeof data != 'string') {
                    
                    data = JSON.stringify(data);
                }
                
                alertBox('Connect Failed: ' + data);
            });


            socket.on('error', (data) => {

                if (typeof data != 'string') {

                    data = JSON.stringify(data);
                }
              
                alertBox('Error: ' + data);
            });


            socket.on('disconnect', (data) => {
              
            });

            
            socket.on('data', (data) => {

                if ($('#simple-switch').prop('checked')) {

                    displayLog(data);

                } else {

                    buffer.push(data); // buffer while paused
                }
                
            });
            
        });

    </script>


<main>

    <div id="contentBox">

        <div class="contentHeaderBox" style="display: flex; align-items: center; justify-content: space-between;">
            <div style="display: flex; align-items: center;">
                <input type="checkbox" id="simple-switch" checked>
                <span id="status-text" style="margin-left: 10px; min-width: 60px; display: inline-block;">Live</span>
            </div>
                <b class="contentHeader" style="flex-grow: 1; text-align: center; margin: 0 20px;"><%- appData.name %> Realtime Logs</b>
                <span style="visibility: hidden; flex-grow: 0;"><input type="checkbox" style="visibility: hidden;"></span>  <!-- Invisible element for balance -->
        </div>
        <% if (isLiteLog) { %>
            <div class="flex-container">
                <div class="lite-log">
                    <h3>Lite Logging Enabled</h3>
                    <p>All logs will be written to console.</p>
                    <p>To store logs, restart SymBot without params</p>
                </div>
            </div>
        <% } 
        else { %> 
        <div id="dataBox" class="botsDealsBox" style="width: 100%;"></div>
        <% } %>
    </div>

</main>

<%- include('./partialsFooterView'); %>