<% 
let ordersContent = '';
let lastOrderDate = '';
let sumTotal = 0;
let qtySumTotal = 0;
let averagePrice = 0;
let allOrderDates = [];

const duration = timeDiff(new Date(), new Date(dealTracker[dealId].date));

// Calculate totals, collect all order dates, and determine the last order date and average price
dealTracker[dealId].orders.forEach(order => {
    if (order.filled) {
        const dateFilled = order.dateFilled ? dateConvertLocal(new Date(order.dateFilled)) : '';
        if (dateFilled) {
            allOrderDates.push(dateFilled);
            if (!lastOrderDate || new Date(dateFilled) > new Date(lastOrderDate)) {
                lastOrderDate = dateFilled;
                averagePrice = order.average || 0;
            }
        }
        ordersContent += `
Order #${order.orderNo || ''}: Date: ${dateFilled}. Order Price: $${order.price !== undefined ? order.price : ''}. 
Order Amount: $${order.amount !== undefined ? order.amount : ''}. Order Quantity: ${order.qty !== undefined ? order.qty : ''}.
        `;
        sumTotal += order.amount || 0;
        qtySumTotal += order.qty || 0;
    }
});
%>
Below is the buy orders history for cryptocurrency pair: <%= dealTracker[dealId].config.pair %> under the DCA (Dollar Cost Average) deal ID <%= dealId %>.

<%= ordersContent %>

The current price for <%= dealTracker[dealId].config.pair %> as of <%= dateConvertLocal(new Date(dealTracker[dealId].info.updated)) %> is: $<%= dealTracker[dealId].info.price_last %>. Current profit at this price is <%= dealTracker[dealId].info.profit_percentage %>%.
The total amount spent is $<%= sumTotal.toFixed(2) %>, and the total quantity bought is <%= qtySumTotal %>.  
The deal started on <%= dateConvertLocal(new Date(dealTracker[dealId].date)) %> and has been active for a total duration of <%= duration %>.  
The last buy order date is <%= lastOrderDate %>, and the average price is $<%= parseFloat(averagePrice.toFixed(10)) %>.  

Upon closing, the deal will sell the entire quantity at the final target sell price of $<%= dealTracker[dealId].info.price_target %>, achieving a profit margin of <%= dealTracker[dealId].config.dcaTakeProfitPercent %>%.

The estimated final profit is calculated as follows:  
**(Target Sell Price × Total Quantity) - Total Amount Spent**

Estimated Profit = ($<%= dealTracker[dealId].info.price_target %> × <%= qtySumTotal %>) - $<%= sumTotal %>  
= **$<%= (dealTracker[dealId].info.price_target * qtySumTotal - sumTotal).toFixed(2) %>**

Use the above data, including all order dates and pricing details, to provide a realistic, factual, and accurate estimation of the deal's future closing date. Highlight key dates and the profit estimate clearly.

Also provide a second estimated date if $<%= dealTracker[dealId].info.estimates.amount_net %> were added to the deal. This should close sooner than the first in profit since we're lowering the average and target prices.
This results in buying <%= (Number(dealTracker[dealId].info.estimates.amount_net) / Number(dealTracker[dealId].info.price_last)) %> additional quantity for the deal at the current price of $<%= dealTracker[dealId].info.price_last %>, decreasing the average price to $<%= dealTracker[dealId].info.estimates.price_average_net %> and decreasing the target sell price to $<%= dealTracker[dealId].info.estimates.price_target_net %>.
This will also increase the final take profit of the deal because of the additional funds added to the deal.

Since today is <%= dateConvertLocal(new Date()) %>, the estimated closing dates and times must be after that.

Separate both estimates clearly showing scenario one and two. Provide a final summary at the end in just a few sentences.
