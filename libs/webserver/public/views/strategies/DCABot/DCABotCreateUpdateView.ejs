<%- include('../../partialsHeaderView'); %>

<script>

	let isUpdate = false;
	let confirmStart = false;

	let formAction = '<%- formAction %>';

	function resetForm(form) {

		$('#spinner-overlay').fadeOut(100);

		$('#formSubmitPreview').show();
		$('#formSubmitReset').hide();
		$('#formSubmitStart').hide();
		$('#ordersBox').hide();

		$('input,select').not('[type=button]').prop('disabled', false);
	}

	$(document).ready(function () {

		let botText = 'Create Bot';
		let headerText = 'Create DCA Bot';

		// Set names depending on create or update bot
		if (formAction.indexOf('update') > -1) {

			isUpdate = true;

			botText = 'Update Bot';
			headerText = 'Update DCA Bot';
			
			$('#botIdRow').show();
		}

		$('#headerText').text(headerText);
		$('#formSubmitStart').text(botText);

		$('#pair').select2();
		$('[id*="botActive"]').simpleSwitch();

		const form = '#formBotsCreate';
		const submitUrl = $(form).attr('action');

		const createStep = $('#createStep').val();

		$('[id^="formSubmit"]').on('click', function(e) {

			e.preventDefault();

			const id = $(this).attr('id');

			if (id.match(/reset/i)) {

				resetForm(form);
				return;
			}

			if (id.match(/start/i) && !confirmStart) {

				$.confirm({
							title: false,
							boxWidth: '50%',
							useBootstrap: false,
							content: '<div style="font-size: 1.2rem; text-align: left;">' + botText + '?</div>',
							buttons: {

										ok: {

											btnClass: 'btn-default',
											text: '<div style="color: #4aa602;">' + botText + '</div>',
											action: function () {

												confirmStart = true;
											
												$('#createStep').val('start');
												$('#formSubmitStart').click();
										}
									 },
									 	cancel: {

									 		btnClass: 'btn-default',
										 	text: '<div style="color: #000000;">Cancel</div>',	
										 	action: function () { }
									 	}
									 }
				});

				return;
			}

			confirmStart = false;

			$('#formSubmitReset').hide();
			$('#formSubmitStart').hide();
			$('#ordersBox').hide();

			// Enable form so data is retrievable
			$('input,select').not('[type=button]').prop('disabled', false);

			$('#active').val($('#botActive').prop('checked'));

			const formDataSubmit = $(form).serialize();
			const formData = $(form).serializeArray().reduce((o, {name: n, value: v}) => Object.assign(o, { [n]: v }), {});


			if (formData.pair == undefined || formData.pair == null || formData.pair == '' || !formData.pair.match(/\//)) {

				alertBox('Invalid Pair');

				return;
			}

			if (formData.startCondition == undefined || formData.startCondition == null || formData.startCondition == '') {

				alertBox('Invalid Start Condition');

				return;
			}

			$('#spinner-overlay').fadeIn(100);

			$('#formSubmitPreview').hide();
			$('input,select').not('[type=button]').prop('disabled', true);

			$.ajax({
						type: 'POST',
						url: submitUrl,
						data: formDataSubmit,
						dataType: 'json',
						success: function(data) {

						if (!data.success) {

							$('#spinner-overlay').fadeOut(100);

							$('#formSubmitPreview').show();
							$('input,select').not('[type=button]').prop('disabled', false);

							//alertBox(JSON.stringify(data));
							alertBox(data.data);
						}
						else {

							$('#ordersBox').html('<pre>' + data.data + '</pre><br>');
							
							if (data.step.toLowerCase() != 'getorders') {

								resetForm(form);

								if (!isUpdate) {

									alertBox('Bot Created');
								}
								else {

									alertBox('Bot Updated');
								}
							}
							else {

								$('#spinner-overlay').fadeOut(100);

								$('input,select').not('[type=button]').prop('disabled', true);

								$('#ordersBox').show();
								$('#formSubmitReset').show();
								$('#formSubmitStart').show();

								alertBox('Verify orders and confirm to ' + botText);
							}
						}
					},
					error: function(data) {

						// Some error in ajax call
						$('#spinner-overlay').fadeOut(100);

						$('#formSubmitStart').hide();
						alertBox('Error: ' + JSON.stringify(data));
				}
			});

			// Reset value
			$('#createStep').val(createStep);
		});
	});


	$(document).on('keypress', '#botsCreate input', function(e) {

		const id = $(this).attr('id');
		const val = $('#' + id).val();

		const charCode = (e.which) ? e.which : e.keyCode;

		if (id.toLowerCase() != 'pair' && id.toLowerCase() != 'botname') {

			let regEx = /[^0-9\.]/g;

			if (id.toLowerCase() == 'dealmax') {

				regEx = /[^0-9]/g;
			}

			if (charCode == 46 && (val.split('.').length - 1) > 0) {

				return false;
			}

			if (String.fromCharCode(charCode).match(regEx)) { return false; }
		}
	});

</script>

		<%
			let symbolString = '';
			let activeChecked = '';

			let startConditionString = '<option value="">';

			let pairsObj = {};
			let botPairs = [];

			if (botData.active) {

				activeChecked = 'checked';
			}

			if (typeof botData.pair !== 'string') {

				botPairs = botData.pair;
			}
			else {

				botPairs.push(botData.pair);
			}

			for (let pair of botPairs) {

				pair = pair.toUpperCase();
				pairsObj[pair] = 1;
 			}

			for (let i = 0; i < symbols.length; i++) {

				let selected = '';

				let pair = symbols[i].toUpperCase();

				if (pairsObj[pair] != undefined && pairsObj[pair] != null) {

					selected = ' selected';
				}
				
				symbolString += '<option value="' + pair + '" ' + selected + '>' + pair;
			}

			for (let key in appData.bots['start_conditions']) {

				let selected = '';

				let description = appData.bots['start_conditions'][key]['description'];

				if (botData.startConditions != undefined && botData.startConditions != null && botData.startConditions != '') {

					if (key == botData.startConditions[0]) {

						selected = ' selected';
					}
				}

				startConditionString += '<option value="' + key + '" ' + selected + '>' + description;
			}
		%>

<center>
<main>

	<div id="contentBox" style="width: 90%;">

	<h2 id="headerText"></h2>

	<table id="botsCreate" cellpadding=0 cellspacing=0>

	<form id="formBotsCreate" autocomplete="off" action="<%- formAction %>">

		<input type=hidden id="createStep" name="createStep" value="getorders">
		<input type=hidden id="botId" name="botId" value="<%- botData.botId %>">
		<input type=hidden id="active" name="active">

		<tr id="botIdRow" style="display: none;"><td>Bot ID:</td> <td><%- botData.botId %></td></tr>
		<tr><td>Bot Name:</td> <td><input id="botName" name="botName" value="<%- botData.botName %>" class="form-field" style="width: 200px;"></td></tr>
		<tr><td style="vertical-align: top;">Pair:</td> <td><select id="pair" name="pair" class="form-select-pair" style="width: 200px;" multiple="multiple"><%- symbolString %></select></td></tr>
		<tr><td>Base Order Size:</td> <td><input id="firstOrderAmount" name="firstOrderAmount" value="<%- botData.firstOrderAmount %>" class="form-field"></td></tr>
		<tr><td>Safety Order Size:</td> <td><input id="dcaOrderAmount" name="dcaOrderAmount" value="<%- botData.dcaOrderAmount %>" class="form-field"></td></tr>
		<tr><td>Max Safety Orders:</td> <td><input id="dcaMaxOrder" name="dcaMaxOrder" value="<%- botData.dcaMaxOrder %>" class="form-field"></td></tr>
		<tr><td>Safety Order Price Deviation:</td> <td><input id="dcaOrderStepPercent" name="dcaOrderStepPercent" value="<%- botData.dcaOrderStepPercent %>" class="form-field"></td></tr>
		<tr><td>Safety Order Volume Scale:</td> <td><input id="dcaOrderSizeMultiplier" name="dcaOrderSizeMultiplier" value="<%- botData.dcaOrderSizeMultiplier %>" class="form-field"></td></tr>
		<tr><td>Safety Order Step Scale:</td> <td><input id="dcaOrderStepPercentMultiplier" name="dcaOrderStepPercentMultiplier" value="<%- botData.dcaOrderStepPercentMultiplier %>" class="form-field"></td></tr>
		<tr><td>Target Profit %:</td> <td><input id="dcaTakeProfitPercent" name="dcaTakeProfitPercent" value="<%- botData.dcaTakeProfitPercent %>" class="form-field"></td></tr>
		<tr><td>Max Deals:</td> <td><input id="dealMax" name="dealMax" value="<%- botData.dealMax %>" class="form-field"></td></tr>
		<tr><td>Start Condition:</td> <td><select id="startCondition" name="startCondition" class="form-field" style="width: 200px;"><%- startConditionString %></select></td></tr>
		<tr><td>Enabled:</td> <td><input id="botActive" name="botActive" type=checkbox class="form-field" <%- activeChecked %>></td></tr>

		<tr>
			<td style="padding-top: 25px; text-align: center;" colspan=2>

				<button id="formSubmitPreview" class="btn">Preview Bot</button>
				<button id="formSubmitReset" class="btn" style="display: none;">Modify Bot</button>
				&nbsp;&nbsp;&nbsp; <button id="formSubmitStart" class="btn" style="display: none;"></button>
			</td>
		</tr>

	</form>
	
	</table>

	</div>
	
	<div id="ordersBox"></div>

</main>
</center>


<%- include('../../partialsFooterView'); %>
